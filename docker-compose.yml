version: '3.9'

x-superset-image: &superset-image apache/superset:latest
x-superset-depends-on: &superset-depends-on
  - postgres
  - redis
x-superset-volumes: &superset-volumes
  # /app/pythonpath_docker will be appended to the PYTHONPATH in the final container
  - ./superset/docker:/app/docker
  - superset_home:/app/superset_home

services:
  jupyter:
    build: ./jupyter/
    environment:
      - S3_ENDPOINT=http://minio:9000
      - S3_BUCKET=test
      - S3_ACCESS_KEY=sparkaccesskey
      - S3_SECRET_KEY=sparksupersecretkey
    ports: 
      - 8888:8888
    volumes:
      - ./data:/data
      - ./jupyter/notebooks/:/notebooks/
  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_USER=hive
      - POSTGRES_PASSWORD=hive
      - POSTGRES_DB=metadata
    volumes:
      - postgres-db:/var/lib/postgresql/data
      - ./superset/init_supersetdb.sql:/docker-entrypoint-initdb.d/init_supersetdb.sql
    healthcheck:
      test: ["CMD", "pg_isready","-U", "hive", "metadata"]
    restart: always
  metastore:
    build: ./metastore
    # volumes:
    #   - hive-data:/opt/warehouse # /user/hive/warehouse is where hive standalone metastore keeps data
    ports:
      - 9083:9083 #Thrift port
    depends_on:
      - postgres
      - minio
  minio:
    image: quay.io/minio/minio
    command: ["server", "/data", "--console-address", ":9090"]
    environment:
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=minio123
    volumes:
      - minio-data:/data
    ports:
      - 9090:9090
      - 9000:9000
  minio-init:
    image: minio/mc # MinioClient image; use it to make buckets and perform any other tasks on startup
    depends_on:
      - minio
    entrypoint: ["/bin/bash", "-c", "/docker-entrypoint-initdb.d/entrypoint.sh"]
  trino:
    build: ./trino
    ports:
      - 8080:8080
  aws:
    image: amazon/aws-cli

  superset:
    env_file: superset/docker/.env-non-dev
    image: *superset-image
    command: ["/app/docker/docker-bootstrap.sh", "app-gunicorn"]
    user: "root"
    restart: unless-stopped
    ports:
      - 8088:8088
    depends_on: *superset-depends-on
    volumes: *superset-volumes
  superset-init:
    image: *superset-image
    command: ["/app/docker/docker-init.sh"]
    env_file: superset/docker/.env-non-dev
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes
  superset-worker:
    image: *superset-image
    command: ["/app/docker/docker-bootstrap.sh", "worker"]
    env_file: superset/docker/.env-non-dev
    restart: unless-stopped
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes
  superset-worker-beat:
    image: *superset-image
    command: ["/app/docker/docker-bootstrap.sh", "beat"]
    env_file: superset/docker/.env-non-dev
    restart: unless-stopped
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes
  redis:
    image: redis:latest
    restart: unless-stopped
    volumes:
      - redis:/data
  spark:
    build: ./spark
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - '8080:8080'
      - '7077:7077'
    volumes:
      - ./data:/data
  spark-worker:
    build: ./spark
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    volumes:
      - ./data:/data
  
  # mongo:
  #   image: mongo
  #   restart: unless-stopped
  #   environment:
  #     MONGO_INITDB_DATABASE: mongo
  #     MONGO_INITDB_ROOT_USERNAME: root
  #     MONGO_INITDB_ROOT_PASSWORD: example
  #   ports:
  #     - 27017:27017
  #   volumes:
  #     - mongo_data:/data/db
  
  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.16.0
  #   environment:
  #     - "ES_JAVA_OPTS=-Xms1024m -Xmx2g"
  #     - discovery.type=single-node
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   volumes:
  #     - elasticsearch_data:/usr/share/elasticsearch/data
  #   ports:
  #     - 9200:9200

volumes:
  postgres-db:
  hive-data:
  minio-data:
  superset_home:
  redis:
  # elasticsearch_data:
  # mongo_data: 
