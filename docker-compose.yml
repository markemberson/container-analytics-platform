version: '3.9'

x-superset-image: &superset-image apache/superset:latest
x-superset-depends-on: &superset-depends-on
  - postgres
  - redis
x-superset-volumes: &superset-volumes
  # /app/pythonpath_docker will be appended to the PYTHONPATH in the final container
  - ./superset/docker:/app/docker
  - superset_home:/app/superset_home

services:
  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_USER=hive
      - POSTGRES_PASSWORD=hive
      - POSTGRES_DB=metadata
    volumes:
      - postgres-db:/var/lib/postgresql/data
      - ./superset/init_supersetdb.sql:/docker-entrypoint-initdb.d/init_supersetdb.sql
    healthcheck:
      test: ["CMD", "pg_isready","-U", "hive", "metadata"]
    restart: always
  metastore:
    build: ./metastore
    # volumes:
    #   - hive-data:/opt/warehouse # /user/hive/warehouse is where hive standalone metastore keeps data
    ports:
      - 9083:9083 #Thrift port
    depends_on:
      - postgres
      - minio
  minio:
    image: quay.io/minio/minio
    command: ["server", "/data", "--console-address", ":9090"]
    environment:
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=minio123
    volumes:
      - minio-data:/data
    ports:
      - 9090:9090
      - 9000:9000
  minio-init:
    image: minio/mc # MinioClient image; use it to make buckets and perform any other tasks on startup
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 3;
      /usr/bin/mc alias set myminio http://minio:9000 minio minio123;
      /usr/bin/mc mb myminio/test;
      /usr/bin/mc policy set public myminio/test;
      /usr/bin/mc admin user svcacct add --access-key 'trinohiveaccesskey' --secret-key 'trinohivesupersecretkey' myminio minio;
      exit 0;
      "
  trino:
    build: ./trino
    ports:
      - 8080:8080
  aws:
    image: amazon/aws-cli
  api:
    build: ./data_api
    ports:
      - 8000:8000
    volumes:
      - ./data_api:/app
    environment:
      - DB_CONNECTION_STRING=trino://trino@trino:8080/hive
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 10s

  superset:
    env_file: superset/docker/.env-non-dev
    image: *superset-image
    command: ["/app/docker/docker-bootstrap.sh", "app-gunicorn"]
    user: "root"
    restart: unless-stopped
    ports:
      - 8088:8088
    depends_on: *superset-depends-on
    volumes: *superset-volumes
  superset-init:
    image: *superset-image
    command: ["/app/docker/docker-init.sh"]
    env_file: superset/docker/.env-non-dev
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes
  superset-worker:
    image: *superset-image
    command: ["/app/docker/docker-bootstrap.sh", "worker"]
    env_file: superset/docker/.env-non-dev
    restart: unless-stopped
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes
  superset-worker-beat:
    image: *superset-image
    command: ["/app/docker/docker-bootstrap.sh", "beat"]
    env_file: superset/docker/.env-non-dev
    restart: unless-stopped
    depends_on: *superset-depends-on
    user: "root"
    volumes: *superset-volumes
  redis:
    image: redis:latest
    restart: unless-stopped
    volumes:
      - redis:/data

volumes:
  postgres-db:
  hive-data:
  minio-data:
  superset_home:
  redis: